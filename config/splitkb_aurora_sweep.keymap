/*
 * Copyright (c) 2022 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

&mt {
    //  flavor = "tap-preferred";
    // tapping-term-ms = <200>;
};

&led_strip { chain-length = <17>; };

/ {
    combos {
        compatible = "zmk,combos";

        combo_esc {
            timeout-ms = <50>;
            key-positions = <0 1>;
            bindings = <&kp ESC>;
        };

        combo_tab {
            timeout-ms = <50>;
            key-positions = <10 11>;
            bindings = <&kp TAB>;
        };

        combo_ralt {
            timeout-ms = <50>;
            key-positions = <17 16>;
            bindings = <&kp RALT>;
        };

        combo_lalt {
            timeout-ms = <50>;
            key-positions = <11 12>;
            bindings = <&kp LALT>;
        };

        combo_lgui {
            timeout-ms = <50>;
            key-positions = <12 13>;
            bindings = <&kp LGUI>;
        };

        combo_rgui {
            timeout-ms = <50>;
            key-positions = <17 18>;
            bindings = <&kp RGUI>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp Q       &kp W           &kp E  &kp R  &kp T    &kp Y  &kp U  &kp I     &kp O    &kp P
&kp A       &kp S           &kp D  &kp F  &kp G    &kp H  &kp J  &kp K     &kp L    &kp BACKSPACE
&mt LSFT Z  &kp X           &kp C  &kp V  &kp B    &kp N  &kp M  &kp CMMA  &kp DOT  &mt LSFT RET
&sl 1       &kp LEFT_SHIFT                                                 &kp SPC  &mo 2
            >;
        };

        left_layer {
            bindings = <
&kp NUM_1  &kp NUM_2  &kp NUM_3        &kp NUM_4        &kp NUM_5     &kp PIPE       &kp ASTERISK     &kp LEFT_BRACE        &kp RIGHT_BRACE        &kp NUM_0
&kp TAB    &kp LC(S)  &kp DQT          &kp PIPE2        &kp HASH      &kp AMPERSAND  &kp EXCLAMATION  &kp LBKT              &kp RBKT               &kp DEL
&kp ESC    &kp TILDE  &kp NON_US_BSLH  &kp NON_US_HASH  &kp TILDE2    &kp MINUS      &kp GRAVE        &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp DEL
&sl 2      &kp LGUI                                                                                                         &kp RGUI               &sl 0
            >;
        };

        right_layer {
            bindings = <
&kp BANG  &kp ATSN   &kp HASH  &kp DLLR  &kp PRCT    &kp CRRT   &kp AMPS      &kp KMLT  &kp LPRN  &kp RPRN
&kp HASH  &kp QMARK  &kp FSLH  &kp COLN  &kp SCLN    &kp MINUS  &kp KP_EQUAL  &kp LBRC  &kp RBRC  &kp BKSP
&kp LSFT  &kp KPLS   &kp LBKT  &kp RBKT  &kp BSLH    &kp UNDER  &kp LEFT      &kp DOWN  &kp UP    &kp RIGHT
&sl 3     &kp LCTL                                                                      &kp SPC   &sl 1
            >;
        };

        tri_layer {
            bindings = <
&kp NUM_1   &kp NUM_2   &kp NUM_3   &kp NUM_4  &kp NUM_5    &trans  &trans     &trans        &trans      &trans
&kp F1      &kp F2      &kp F3      &kp F4     &kp F5       &trans  &kp PG_UP  &kp K_VOL_UP  &kp K_MUTE  &trans
&bt BT_CLR  &bt BT_NXT  &bt BT_PRV  &kp F6     &kp F7       &trans  &kp PG_DN  &kp K_VOL_DN  &trans      &trans
&sl 4       &trans                                                                           &trans      &sl 2
            >;
        };

        KiCAD {
            bindings = <
&kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp NUMBER_4  &kp NUMBER_5    &trans  &trans  &trans  &trans  &trans
&kp NUMBER_7  &kp NUMBER_8  &kp NUMBER_9  &kp NUMBER_0  &trans          &trans  &trans  &trans  &trans  &trans
&trans        &trans        &trans        &trans        &trans          &trans  &trans  &trans  &trans  &trans
&trans        &trans                                                                            &trans  &sl 3
            >;
        };
    };
};
